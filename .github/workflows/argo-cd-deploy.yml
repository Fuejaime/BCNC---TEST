name: Deploy to ArgoCD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up KinD (Kubernetes in Docker)
      - name: Set up KinD (Kubernetes in Docker)
        uses: helm/kind-action@v1

      # Wait for Kubernetes to be Ready
      - name: Wait for Kubernetes to be Ready
        run: |
          kubectl wait --for=condition=Ready node --all --timeout=120s

      # Install ArgoCD
      - name: Install ArgoCD
        run: |
          kubectl create namespace argocd
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
          kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n argocd

      # Wait for ArgoCD to be Ready
      - name: Wait for ArgoCD to be Ready
        run: |
          kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n argocd

      # Debug ArgoCD Pods
      - name: Debug ArgoCD Pods
        run: kubectl get pods -n argocd -o wide

      # Get ArgoCD admin password
      - name: Get ArgoCD admin password
        run: |
          while [[ -z "$ARGO_PWD" ]]; do
            sleep 5
            ARGO_PWD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d || echo "")
          done
          echo "::add-mask::$ARGO_PWD"
          echo "ARGOCD_PASSWORD=$ARGO_PWD" >> $GITHUB_ENV

      # Login to ArgoCD
      - name: Login to ArgoCD
        run: |
          kubectl port-forward svc/argocd-server -n argocd 8080:80 &
          sleep 10
          argocd login localhost:8080 --username admin --password "${{ env.ARGOCD_PASSWORD }}" --insecure --grpc-web

      # Verify Application Exists
      - name: Verify Application Exists
        run: |
          if ! argocd app get BCNC; then
            echo "Application BCNC does not exist! Creating..."
            argocd app create BCNC \
              --repo https://github.com/fuejaime/mi-repo.git \
              --path k8s \
              --dest-server https://kubernetes.default.svc \
              --dest-namespace default
          fi

      # Deploy application
      - name: Deploy application
        run: |
          argocd app sync BCNC
          argocd app wait BCNC --health
